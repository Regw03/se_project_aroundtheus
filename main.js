!function(){"use strict";function e(e,t,s){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var n=s.call(e,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class t{constructor(t,s,n){e(this,"_handleDelete",(()=>{this._cardElement.remove()})),e(this,"_toggleLike",(()=>{this.likeButton.classList.toggle("elements__card-button_active")})),this._name=t.name,this._link=t.link,this._handleImageClick=n,this._cardSelector=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".elements__card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._setEventListeners(),this._cardElement.querySelector(".elements__card-image").src=this._link,this._cardElement.querySelector(".elements__card-image").alt=this._name,this._cardElement.querySelector(".elements__card-title").textContent=this._name,this._cardElement}_setEventListeners(){this.likeButton=this._cardElement.querySelector("#like-button"),this.likeButton.addEventListener("click",this._toggleLike),this._cardElement.querySelector(".elements__trash-button").addEventListener("click",this._handleDelete),this._cardElement.querySelector(".elements__card-image").addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}}const s={};var n=class{constructor(e,t){this._settings=e,this._form=t}_setEventListeners(){const e=[...this._form.querySelectorAll(this._settings.inputSelector)],t=this._form.querySelector(this._settings.submitButtonSelector);this._toggleButton(e,t,s),e.forEach((s=>{s.addEventListener("input",(n=>{this._checkInputValidity(this._form,s,this._settings),this._toggleButton(e,t,this._settings)}))}))}_showInputError(e){const t=this._form.querySelector("#"+e.id+"-error");t.textContent=e.validationMessage,t.classList.add(this._settings.errorClass),e.classList.add(this._settings.inputErrorClass)}_hideInputError(e){const t=this._form.querySelector("#"+e.id+"-error");t.textContent="",t.classList.remove(this._settings.errorClass),e.classList.remove(this._settings.inputErrorClass)}_checkInputValidity(e,t,s){t.validity.valid?this._hideInputError(t,this._form,this._settings):this._showInputError(t,this._form,this._settings)}_hasValidInputs(e){return e.every((e=>!0===e.validity.valid))}_toggleButton(){const e=[...this._form.querySelectorAll(this._settings.inputSelector)];this.button=this._form.querySelector(this._settings.submitButtonSelector),this._hasValidInputs(e)?this._enableSubmitButton():this.disableSubmitButton()}_enableSubmitButton(){this.button.disabled=!1,this.button.classList.remove(this._settings.inactiveButtonClass)}disableSubmitButton(){this.button.disabled=!0,this.button.classList.add(this._settings.inactiveButtonClass)}enableValidation(){this._form.addEventListener("submit",(e=>e.preventDefault())),this._setEventListeners()}};class i{constructor(e){var t,s,n;t=this,n=e=>{"Escape"===e.key&&this.close()},(s=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var n=s.call(e,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(s="_handleEscClose"))in t?Object.defineProperty(t,s,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[s]=n,this.popup=document.querySelector(e),this.closeButton=this.popup.querySelector(".popup__close-button"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this.popup.classList.add("popup_is-open"),document.addEventListener("keydown",this._handleEscClose)}close(){this.popup.classList.remove("popup_is-open"),document.removeEventListener("keydown",this._handleEscClose)}_handleOverlayClick(e){e.target.classList.contains("popup_is-open")&&this.close()}setEventListeners(){this.closeButton.addEventListener("click",(()=>this.close())),this.popup.addEventListener("click",this._handleOverlayClick.bind(this))}}class o extends i{constructor(e,t){super(e),this.handelFormSubmit=t,this._popupForm=this.popup.querySelector(".popup__form"),this._inputList=this._popupForm.querySelectorAll(".popup__input")}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>this._formValues[e.name]=e.value)),this._formValues}close(){this._popupForm.reset(),super.close()}setEventListeners(){this._popupForm.addEventListener("submit",(()=>{this.handelFormSubmit(this._getInputValues())})),super.setEventListeners()}}const r=document.querySelector(".profile__add-button"),l=document.querySelector(".profile__edit-button"),u=(document.querySelector(".popup__close-button"),document.querySelector("#add_close-button"),document.querySelector("#add_submit"),document.querySelector("#image_preview-close"),document.querySelector(".profile__info-name"),document.querySelector(".profile__info-profession"),document.querySelector(".popup__form")),a=(document.querySelector("#edit-popup"),document.querySelector("#add-form")),c=u.querySelector("#name-input"),p=u.querySelector("#profession-input"),d=(a.querySelector("#add_title-input"),a.querySelector("#add_link-input"),{formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"}),_=(document.querySelector(".elements__card-grid"),new class{constructor(e,t){let{items:s,renderer:n}=e;this.renderer=n,this.items=s,this.element=document.querySelector(t)}renderItems(){this.items.forEach((e=>{this.renderer(e)}))}addItem(e){this.element.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>{const t=k(e);_.addItem(t)}},".elements__card-grid"));_.renderItems();const m=document.querySelector("#image_preview");m.querySelector(".popup__image"),m.querySelector(".popup__image-title"),new n(d,u).enableValidation();const h=new n(d,a);h.enableValidation();const y=new o("#add-popup",(e=>{const t=k({name:e.name,link:e.link});_.addItem(t),y.close()}));y.setEventListeners();const g=new o("#edit-popup",(e=>{S.setUserInfo(e.name,e.profession),g.close()})),f=new class extends i{constructor(e){super(e),this._title=this.popup.querySelector(".popup__image-title"),this._image=this.popup.querySelector(".popup__image")}open(e){let{link:t,name:s}=e;this._title.textContent=s,this._image.src=t,this._image.alt=s,super.open()}}("#image_preview");f.setEventListeners();const v=document.querySelector("#infoname"),b=document.querySelector("#profession"),S=new class{constructor(e,t){this.name=e,this.profession=t}getUserInfo(){return{profession:this.profession.textContent,name:this.name.textContent}}setUserInfo(e,t){this.name.textContent=e,this.profession.textContent=t}}(v,b);function E(e){let{name:t,link:s}=e;f.open({name:t,link:s})}function k(e){return new t(e,"#card-template",E).getView()}g.setEventListeners(),l.addEventListener("click",(function(){const e=S.getUserInfo();c.value=e.name,p.value=e.profession,g.open()})),r.addEventListener("click",(function(){h.disableSubmitButton(),y.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,