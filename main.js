!function(){"use strict";function e(e,t,s){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var i=s.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class t{constructor(t,s,i,n,r){e(this,"handleDelete",(()=>{this._cardElement.remove()})),e(this,"handleLike",(e=>{this._isLiked=e,this._toggleLike()})),e(this,"_toggleLike",(()=>{this._isLiked?this.likeButton.classList.add("elements__card-button_active"):this.likeButton.classList.remove("elements__card-button_active")})),this._name=t.name,this._link=t.link,this._handleImageClick=i,this._cardSelector=s,this._handleDeleteClick=n,this._cardId=t._id,this._handleLikeClick=r,this._isLiked=t.isLiked}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".elements__card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._setEventListeners(),this._toggleLike(),this._cardElement.querySelector(".elements__card-image").src=this._link,this._cardElement.querySelector(".elements__card-image").alt=this._name,this._cardElement.querySelector(".elements__card-title").textContent=this._name,this._cardElement}_setEventListeners(){this.likeButton=this._cardElement.querySelector("#like-button"),this.likeButton.addEventListener("click",(()=>this._handleLikeClick(this._cardId))),this._cardElement.querySelector(".elements__trash-button").addEventListener("click",(()=>this._handleDeleteClick(this._cardId))),this._cardElement.querySelector(".elements__card-image").addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}}const s=document.querySelector(".profile__add-button"),i=document.querySelector(".profile__edit-button"),n=(document.querySelector(".popup__close-button"),document.querySelector("#add_close-button"),document.querySelector("#add_submit"),document.querySelector("#image_preview-close"),document.querySelector(".elements__trash-button"),document.querySelector(".profile__info-name"),document.querySelector(".profile__info-profession"),document.querySelector(".popup__form")),r=(document.querySelector("#edit-popup"),document.querySelector("#delete_card"),document.querySelector("#add-form")),o=n.querySelector("#name-input"),a=n.querySelector("#profession-input"),c=document.querySelector(".profile__avatar-edit-button"),l=document.querySelector("#change_avatar-form"),d=(r.querySelector("#add_title-input"),r.querySelector("#add_link-input"),{formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"}),u={};var p=class{constructor(e,t){this._settings=e,this._form=t,this._avatarEditForm=l}_setEventListeners(){const e=[...this._form.querySelectorAll(this._settings.inputSelector)],t=this._form.querySelector(this._settings.submitButtonSelector);this._toggleButton(e,t,u),e.forEach((s=>{s.addEventListener("input",(i=>{this._checkInputValidity(this._form,s,this._settings),this._toggleButton(e,t,this._settings)}))}))}_showInputError(e){const t=this._form.querySelector("#"+e.id+"-error");t.textContent=e.validationMessage,t.classList.add(this._settings.errorClass),e.classList.add(this._settings.inputErrorClass)}_hideInputError(e){const t=this._form.querySelector("#"+e.id+"-error");t.textContent="",t.classList.remove(this._settings.errorClass),e.classList.remove(this._settings.inputErrorClass)}_checkInputValidity(e,t,s){t.validity.valid?this._hideInputError(t,this._form,this._settings):this._showInputError(t,this._form,this._settings)}_hasValidInputs(e){return e.every((e=>!0===e.validity.valid))}_toggleButton(){const e=[...this._form.querySelectorAll(this._settings.inputSelector)];this.button=this._form.querySelector(this._settings.submitButtonSelector),this._hasValidInputs(e)?this._enableSubmitButton():this.disableSubmitButton()}_enableSubmitButton(){this.button.disabled=!1,this.button.classList.remove(this._settings.inactiveButtonClass)}disableSubmitButton(){this.button.disabled=!0,this.button.classList.add(this._settings.inactiveButtonClass)}enableValidation(){this._form.addEventListener("submit",(e=>e.preventDefault())),this._setEventListeners()}};class h{constructor(e){var t,s,i;t=this,i=e=>{"Escape"===e.key&&this.close()},(s=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var i=s.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(s="_handleEscClose"))in t?Object.defineProperty(t,s,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[s]=i,this.popup=document.querySelector(e),this.closeButton=this.popup.querySelector(".popup__close-button"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this.popup.classList.add("popup_is-open"),document.addEventListener("keydown",this._handleEscClose)}close(){this.popup.classList.remove("popup_is-open"),document.removeEventListener("keydown",this._handleEscClose)}_handleOverlayClick(e){e.target.classList.contains("popup_is-open")&&this.close()}setEventListeners(){this.closeButton.addEventListener("click",(()=>this.close())),this.popup.addEventListener("click",this._handleOverlayClick.bind(this))}}class m extends h{constructor(e,t){super(e),this.handleFormSubmit=t,this._popupForm=this.popup.querySelector(".popup__form"),this._submitButton=this._popupForm.querySelector(".popup__submit"),this._inputList=this._popupForm.querySelectorAll(".popup__input")}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>this._formValues[e.name]=e.value)),this._formValues}close(){this._popupForm.reset(),super.close()}setEventListeners(){this._popupForm.addEventListener("submit",(()=>{this.handleFormSubmit(this._getInputValues())})),super.setEventListeners()}renderLoading(e){this._submitButton.textContent=e?"Saving...":"Save"}}class _{constructor(e,t){let{items:s,renderer:i}=e;this.renderer=i,this.items=s,this.element=document.querySelector(t)}renderItems(){this.items.forEach((e=>{this.renderer(e)}))}addItem(e){this.element.prepend(e)}}document.querySelector(".elements__card-grid");const v=document.querySelector("#image_preview");v.querySelector(".popup__image"),v.querySelector(".popup__image-title"),new p(d,n).enableValidation();const f=new p(d,r);f.enableValidation(),new p(d,l).enableValidation();const y=new m("#add-popup",(e=>{y.renderLoading(!0),P.addCards(e).then((e=>{const t=I(e);T.addItem(t),y.renderLoading(!1),y.close()}))}));y.setEventListeners();const b=new m("#edit-popup",(e=>{b.renderLoading(!0),P.editProfile({name:e.name,about:e.profession}).then((e=>{C.setUserInfo(e.name,e.about),b.renderLoading(!1)})),b.close()})),S=new m("#change_avatar",(e=>{S.renderLoading(!0),P.changeAvatar(e).then((e=>{console.log(e),C.setAvatarImgInfo(e.avatar),S.renderLoading(!1),S.close()}))}));S.setEventListeners(),c.addEventListener("click",(function(){S.open()}));const g=new class extends h{constructor(e){super(e),this._title=this.popup.querySelector(".popup__image-title"),this._image=this.popup.querySelector(".popup__image")}open(e){let{link:t,name:s}=e;this._title.textContent=s,this._image.src=t,this._image.alt=s,super.open()}}("#image_preview");g.setEventListeners();const k=document.querySelector(".profile__avatar"),L=document.querySelector("#infoname"),E=document.querySelector("#profession"),C=new class{constructor(e,t,s){this.name=e,this.profession=t,this.link=s}getUserInfo(){return{profession:this.profession.textContent,name:this.name.textContent}}setUserInfo(e,t){this.name.textContent=e,this.profession.textContent=t}setAvatarImgInfo(e){this.link.src=e}}(L,E,k);function q(e){let{name:t,link:s}=e;g.open({name:t,link:s})}function I(e){return new t(e,"#card-template",q,B,j).getView()}b.setEventListeners(),i.addEventListener("click",(function(){const e=C.getUserInfo();o.value=e.name,a.value=e.profession,b.open()}));const w=new class extends h{constructor(e){super(e),this._popupForm=this.popup.querySelector(".popup__form")}setSubmitAction(e){this.handleFormSubmit=e}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this.handleFormSubmit()})),super.setEventListeners()}renderLoading(e){this._submitButton.textContent=e?"Saving...":"Save"}}("#delete_card");function B(e){w.open(),w.setSubmitAction((()=>{P.deleteCard({cardId:e}).then((()=>{this.handleDelete()})),w.close()}))}function j(e){this._isLiked?P.removeLike(e).then((()=>{this.handleLike(!1)})):P.addLike(e).then((()=>{this.handleLike(!0)}))}w.setEventListeners(),s.addEventListener("click",(function(){f.disableSubmitButton(),y.open()}));const P=new class{constructor(e){this.getInitialCards=this.getInitialCards,this.addCards=this.addCards,this.editProfile=this.editProfile,this.likeButton=this.likeButton,this.addLike=this.addLike,this.removeLike=this.removeLike}async getInitialCards(){const e=await fetch("https://around-api.en.tripleten-services.com/v1/cards",{headers:{authorization:"b38ed4d6-3275-4538-846d-7ec5d56fd185"}});return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}async addCards(e){let{name:t,link:s}=e;const i=await fetch("https://around-api.en.tripleten-services.com/v1/cards",{method:"POST",headers:{authorization:"b38ed4d6-3275-4538-846d-7ec5d56fd185","Content-Type":"application/JSON"},body:JSON.stringify({name:t,link:s})});return i.ok?i.json():Promise.reject(`Error: ${i.status}`)}async getUserInfo(){const e=await fetch("https://around-api.en.tripleten-services.com/v1/users/me",{headers:{authorization:"b38ed4d6-3275-4538-846d-7ec5d56fd185","Content-Type":"application/JSON"}});return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}async editProfile(e){let{name:t,about:s}=e;const i=await fetch("https://around-api.en.tripleten-services.com/v1/users/me",{method:"PATCH",headers:{authorization:"b38ed4d6-3275-4538-846d-7ec5d56fd185","Content-Type":"application/JSON"},body:JSON.stringify({name:t,about:s})});return i.ok?i.json():Promise.reject(`Error: ${i.status}`)}async deleteCard(e){let{cardId:t}=e;const s=await fetch("https://around-api.en.tripleten-services.com/v1/cards/"+t,{method:"DELETE",headers:{authorization:"b38ed4d6-3275-4538-846d-7ec5d56fd185","Content-Type":"application/JSON"}});return s.ok?s.json():Promise.reject(`Error: ${s.status}`)}async addLike(e){const t=await fetch("https://around-api.en.tripleten-services.com/v1/cards/"+e+"/likes",{method:"PUT",headers:{authorization:"b38ed4d6-3275-4538-846d-7ec5d56fd185","Content-Type":"application/JSON"}});return t.ok?t.json():Promise.reject(`Error: ${t.status}`)}async removeLike(e){const t=await fetch("https://around-api.en.tripleten-services.com/v1/cards/"+e+"/likes",{method:"DELETE",headers:{authorization:"b38ed4d6-3275-4538-846d-7ec5d56fd185","Content-Type":"application/JSON"}});return t.ok?t.json():Promise.reject(`Error: ${t.status}`)}async changeAvatar(e){let{link:t}=e;const s=await fetch("https://around-api.en.tripleten-services.com/v1/users/me/avatar",{method:"PATCH",headers:{authorization:"b38ed4d6-3275-4538-846d-7ec5d56fd185","Content-Type":"application/JSON"},body:JSON.stringify({avatar:t})});return s.ok?s.json():Promise.reject(`Error: ${s.status}`)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"4b5610a4-d4fb-4ac3-a0cf-5cf08fc2641b","Content-Type":"application/json"}});let T;P.getInitialCards().then((e=>{T=new _({items:e,renderer:e=>{const t=I(e);T.addItem(t)}},".elements__card-grid"),T.renderItems()})),P.getUserInfo().then((e=>{C.setUserInfo(e.name,e.about),C.setAvatarImgInfo(e.avatar)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,